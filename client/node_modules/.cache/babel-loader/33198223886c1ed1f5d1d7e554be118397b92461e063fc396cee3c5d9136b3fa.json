{"ast":null,"code":"var _jsxFileName = \"/Users/davidpascual/Desktop/code/triumph-react/client/src/components/container4/requests/Requests.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n// import ReCAPTCHA from '../../ReCAPTCHA/ReCAPTCHA';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAsyncScript } from \"react-async-script\";\nimport './requests.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Requests() {\n  _s();\n  const RECAPTCHA_KEY = \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\";\n  const [token, setToken] = useState('');\n  const [isScriptLoaded, isScriptLoadSucceed] = useAsyncScript(`https://www.google.com/recaptcha/enterprise.js?render=${RECAPTCHA_KEY}`);\n  const [inputs, setInputs] = useState({\n    name: \"\",\n    request: \"\",\n    token: \"\"\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  //======== Allows user to submit once checked ======\n\n  // const handleSubmit2 = (event) => {\n  //     event.preventDefault();\n\n  //     if (token) {\n  //     // Submit the form data\n  //     console.log(\"Form submitted with reCAPTCHA token:\", token);\n  //     } else {\n  //     // Show an error message\n  //     console.error(\"Please complete the reCAPTCHA verification.\");\n  //     }\n  // };\n\n  // const handleReCAPTCHA = async () => {\n  //     try {\n  //     const token = await window.grecaptcha.enterprise.execute(\n  //         \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\",\n  //         { action: \"user_input\" }\n  //     );\n  //     setToken(token);\n  //     } catch (error) {\n  //     console.error(error);\n  //     }\n  // };\n\n  // const handleReCAPTCHA = async () => {\n  //     try {\n  //       const token = await window.grecaptcha.enterprise.execute(\n  //         \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\",\n  //         { action: \"user_input\" }\n  //       );\n  //       setInputs({ ...inputs, token });\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  // };\n\n  const handleReCAPTCHA = async () => {\n    try {\n      const token = await window.grecaptcha.enterprise.execute(RECAPTCHA_KEY, {\n        action: 'user_input'\n      });\n      setToken(token);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // =====================================\n\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [request, setRequest] = useState(\"\");\n  // const handleSubmit = async(e) => {\n  //     e.preventDefault();\n\n  //     const newRequest = {\n  //         name,\n  //         request\n  //     };\n  //     try{\n  //         const response = await axios.post('/api/requests', newRequest);\n  //             if(response.status){ //if response is true\n  //                 // navigate('/')\n  //                 console.log(response)\n\n  //             } else { //if something is wrong with response\n  //                 console.log(\"SOMETHING WENT WRONG!\")\n  //                 // console.err(err)\n  //             }\n\n  //     }catch (error){\n  //         console.log(error)\n  //         if (error.response) {\n  //             // The request was made and the server responded with a status code\n  //             console.log(\"Status code:\", error.response.status);\n  //             console.log(\"Response data:\", error.response.data);\n  //             console.log(\"Headers:\", error.response.headers);\n  //         } else if (error.request) {\n  //             // The request was made but no response was received\n  //             console.log(\"Request:\", error.request);\n  //         } else {\n  //             // Something else happened while setting up the request\n  //             console.log(\"Error:\", error.message);\n  //         }\n  //     }\n  // }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!token) {\n      alert('Please complete the ReCAPTCHA challenge');\n      return;\n    }\n    const newRequest = {\n      name: inputs.name,\n      request: inputs.request,\n      token: token\n    };\n    try {\n      const response = await axios.post('/api/requests', newRequest);\n      if (response.status === 200) {\n        // navigate('/');\n        console.log(response);\n      } else {\n        console.log('SOMETHING WENT WRONG!');\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log('Status code:', error.response.status);\n        console.log('Response data:', error.response.data);\n        console.log('Headers:', error.response.headers);\n      } else if (error.request) {\n        console.log('Request:', error.request);\n      } else {\n        console.log('Error:', error.message);\n      }\n    }\n  };\n\n  //======================================\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fluidContainerRequests container-sm\",\n      id: \"requests\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Have a Prayer request?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minus, vitae reiciendis? Impedit ad maiores tenetur enim eveniet earum officia neque repellat delectus voluptate reiciendis maxime, non dicta, saepe rerum velit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"add-request-form\",\n          action: \"\",\n          role: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"from-control\",\n            id: \"memberName\",\n            placeholder: \"Enter Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Request Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"requestDetails\",\n            placeholder: \"Enter Request Details\",\n            onChange: e => setRequest(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n            sitekey: \"6LfaYOclAAAAADnr7215oSNyJx7Ltna5bXcRe-Jf\",\n            onChange: handleReCAPTCHA\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"submit-request\",\n            children: \"submit prayer request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Requests, \"SA27exg3AvzqHnVImUihpKVpuAU=\", false, function () {\n  return [useAsyncScript, useNavigate];\n});\n_c = Requests;\nvar _c;\n$RefreshReg$(_c, \"Requests\");","map":{"version":3,"names":["axios","ReCAPTCHA","React","useState","useEffect","useNavigate","useAsyncScript","Requests","RECAPTCHA_KEY","token","setToken","isScriptLoaded","isScriptLoadSucceed","inputs","setInputs","name","request","handleInputChange","event","value","target","handleReCAPTCHA","window","grecaptcha","enterprise","execute","action","error","console","navigate","setName","setRequest","handleSubmit","e","preventDefault","alert","newRequest","response","post","status","log","data","headers","message"],"sources":["/Users/davidpascual/Desktop/code/triumph-react/client/src/components/container4/requests/Requests.js"],"sourcesContent":["import axios from 'axios';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n// import ReCAPTCHA from '../../ReCAPTCHA/ReCAPTCHA';\nimport React, {useState, useEffect} from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport { useAsyncScript } from \"react-async-script\";\nimport './requests.css'\n\nexport default function Requests() {\n\n    const RECAPTCHA_KEY = \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\";\n\n    const [token, setToken] = useState('');\n\n    const [isScriptLoaded, isScriptLoadSucceed] = useAsyncScript(\n        `https://www.google.com/recaptcha/enterprise.js?render=${RECAPTCHA_KEY}`\n      );\n\n    const [inputs, setInputs] = useState({\n        name: \"\",\n        request: \"\",\n        token: \"\",\n      });\n\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setInputs({ ...inputs, [name]: value });\n    };\n\n//======== Allows user to submit once checked ======\n\n    // const handleSubmit2 = (event) => {\n    //     event.preventDefault();\n\n    //     if (token) {\n    //     // Submit the form data\n    //     console.log(\"Form submitted with reCAPTCHA token:\", token);\n    //     } else {\n    //     // Show an error message\n    //     console.error(\"Please complete the reCAPTCHA verification.\");\n    //     }\n    // };\n\n    // const handleReCAPTCHA = async () => {\n    //     try {\n    //     const token = await window.grecaptcha.enterprise.execute(\n    //         \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\",\n    //         { action: \"user_input\" }\n    //     );\n    //     setToken(token);\n    //     } catch (error) {\n    //     console.error(error);\n    //     }\n    // };\n\n    // const handleReCAPTCHA = async () => {\n    //     try {\n    //       const token = await window.grecaptcha.enterprise.execute(\n    //         \"6LfNNeYlAAAAAKxcz4Qwjw-dK8tZOGwY09RRHfbo\",\n    //         { action: \"user_input\" }\n    //       );\n    //       setInputs({ ...inputs, token });\n    //     } catch (error) {\n    //       console.error(error);\n    //     }\n    // };\n\n    const handleReCAPTCHA = async () => {\n        try {\n          const token = await window.grecaptcha.enterprise.execute(\n            RECAPTCHA_KEY,\n            { action: 'user_input' }\n          );\n          setToken(token);\n        } catch (error) {\n          console.error(error);\n        }\n    };\n      \n\n// =====================================\n    \n    const navigate = useNavigate();\n    const [name, setName] = useState(\"\")\n    const [request, setRequest] = useState(\"\");\n    // const handleSubmit = async(e) => {\n    //     e.preventDefault();\n\n    //     const newRequest = {\n    //         name,\n    //         request\n    //     };\n    //     try{\n    //         const response = await axios.post('/api/requests', newRequest);\n    //             if(response.status){ //if response is true\n    //                 // navigate('/')\n    //                 console.log(response)\n                    \n    //             } else { //if something is wrong with response\n    //                 console.log(\"SOMETHING WENT WRONG!\")\n    //                 // console.err(err)\n    //             }\n        \n    //     }catch (error){\n    //         console.log(error)\n    //         if (error.response) {\n    //             // The request was made and the server responded with a status code\n    //             console.log(\"Status code:\", error.response.status);\n    //             console.log(\"Response data:\", error.response.data);\n    //             console.log(\"Headers:\", error.response.headers);\n    //         } else if (error.request) {\n    //             // The request was made but no response was received\n    //             console.log(\"Request:\", error.request);\n    //         } else {\n    //             // Something else happened while setting up the request\n    //             console.log(\"Error:\", error.message);\n    //         }\n    //     }\n    // }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!token) {\n          alert('Please complete the ReCAPTCHA challenge');\n          return;\n        }\n        const newRequest = {\n          name: inputs.name,\n          request: inputs.request,\n          token: token,\n        };\n        try {\n          const response = await axios.post('/api/requests', newRequest);\n          if (response.status === 200) {\n            // navigate('/');\n            console.log(response);\n          } else {\n            console.log('SOMETHING WENT WRONG!');\n          }\n        } catch (error) {\n          console.log(error);\n          if (error.response) {\n            console.log('Status code:', error.response.status);\n            console.log('Response data:', error.response.data);\n            console.log('Headers:', error.response.headers);\n          } else if (error.request) {\n            console.log('Request:', error.request);\n          } else {\n            console.log('Error:', error.message);\n          }\n        }\n      };\n\n//======================================\n  return (\n    <>\n    \n    <div className=\"fluidContainerRequests container-sm\" id=\"requests\">\n        <div className=\"create\">\n            <h2>Have a Prayer request?</h2>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minus, vitae reiciendis? Impedit ad maiores tenetur enim eveniet earum officia neque repellat delectus voluptate reiciendis maxime, non dicta, saepe rerum velit.</p>\n            <form id=\"add-request-form\" action=\"\" role=\"form\" onSubmit={handleSubmit}>\n                <label>Name</label>\n                <input \n                    type=\"text\" \n                    className=\"from-control\" \n                    id=\"memberName\" \n                    placeholder=\"Enter Name\"\n                    onChange={e=>setName(e.target.value)}\n                />\n\n                <label>Request Details</label>\n                <textarea \n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"requestDetails\" \n                    placeholder=\"Enter Request Details\"\n                    onChange={e=>setRequest(e.target.value)}\n\n                >\n                </textarea>\n\n                {/* <div id=\"recaptcha-container\"></div> */}\n\n                <ReCAPTCHA \n                    sitekey=\"6LfaYOclAAAAADnr7215oSNyJx7Ltna5bXcRe-Jf\"\n                    onChange={handleReCAPTCHA}\n                />\n\n                <button \n                    type=\"submit\" \n                    id=\"submit-request\"\n                >\n                submit prayer request\n                </button>\n            </form>\n        </div>\n    </div>\n    </>\n  )\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}